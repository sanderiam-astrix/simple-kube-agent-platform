# Claude Code Container
FROM ubuntu:22.04

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive
ENV NODE_VERSION=18
ENV CLAUDE_CODE_VERSION=latest

# Install system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    wget \
    git \
    build-essential \
    python3 \
    python3-pip \
    ca-certificates \
    gnupg \
    lsb-release \
    software-properties-common \
    && rm -rf /var/lib/apt/lists/*

# Install Node.js
RUN curl -fsSL https://deb.nodesource.com/setup_${NODE_VERSION}.x | bash - \
    && apt-get install -y nodejs

# Install AWS CLI v2
RUN curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip" \
    && apt-get install -y unzip \
    && unzip awscliv2.zip \
    && ./aws/install \
    && rm -rf aws awscliv2.zip

# Create app directory
WORKDIR /app

# Install Claude Code (using npm)
RUN npm install -g @anthropic/claude-code@${CLAUDE_CODE_VERSION} || \
    npm install -g claude-code@${CLAUDE_CODE_VERSION} || \
    echo "Claude Code package not found, will install manually"

# Alternative: Install Claude Code from source if npm package doesn't exist
RUN if ! command -v claude-code &> /dev/null; then \
    echo "Installing Claude Code from source..." && \
    git clone https://github.com/anthropic/claude-code.git /app/claude-code || \
    git clone https://github.com/Anthropic/claude-code.git /app/claude-code || \
    echo "Claude Code repository not found, using fallback setup"; \
    fi

# Create a simple Claude Code wrapper script
RUN cat > /usr/local/bin/claude-code-wrapper << 'EOF'
#!/bin/bash
set -e

echo "Claude Code AI Agent - Starting..."
echo "AWS Region: ${AWS_REGION:-us-east-2}"
echo "S3 Bucket: ${S3_BUCKET:-not-set}"
echo "Working Directory: $(pwd)"

# Check if Claude Code is available
if command -v claude-code &> /dev/null; then
    echo "Claude Code found, starting..."
    exec claude-code "$@"
elif [ -f "/app/claude-code/package.json" ]; then
    echo "Claude Code source found, installing dependencies..."
    cd /app/claude-code
    npm install
    echo "Starting Claude Code from source..."
    exec npm start "$@"
else
    echo "Claude Code not found, starting fallback service..."
    # Fallback to a simple HTTP service that can be extended
    exec python3 -c "
import http.server
import socketserver
import json
import os
from urllib.parse import urlparse, parse_qs

class ClaudeCodeHandler(http.server.BaseHTTPRequestHandler):
    def do_GET(self):
        if self.path == '/health':
            self.send_response(200)
            self.send_header('Content-type', 'text/plain')
            self.end_headers()
            self.wfile.write(b'OK')
        elif self.path == '/status':
            self.send_response(200)
            self.send_header('Content-type', 'application/json')
            self.end_headers()
            status = {
                'status': 'running',
                'service': 'claude-code-agent',
                'region': os.environ.get('AWS_REGION', 'us-east-2'),
                's3_bucket': os.environ.get('S3_BUCKET', 'not-set'),
                'mode': 'fallback'
            }
            self.wfile.write(json.dumps(status).encode())
        elif self.path == '/':
            self.send_response(200)
            self.send_header('Content-type', 'text/plain')
            self.end_headers()
            response = f'''Claude Code AI Agent - Fallback Mode
Status: Running
Region: {os.environ.get('AWS_REGION', 'us-east-2')}
S3 Bucket: {os.environ.get('S3_BUCKET', 'not-set')}
Mode: Fallback (Claude Code not installed)

Available endpoints:
- /health - Health check
- /status - JSON status
- / - This message
'''
            self.wfile.write(response.encode())
        else:
            self.send_response(404)
            self.send_header('Content-type', 'text/plain')
            self.end_headers()
            self.wfile.write(b'Not Found')

    def do_POST(self):
        # Handle Claude Code API requests
        content_length = int(self.headers['Content-Length'])
        post_data = self.rfile.read(content_length)
        
        self.send_response(200)
        self.send_header('Content-type', 'application/json')
        self.end_headers()
        
        response = {
            'status': 'received',
            'message': 'Claude Code API endpoint (fallback mode)',
            'data_length': len(post_data)
        }
        self.wfile.write(json.dumps(response).encode())

if __name__ == '__main__':
    port = int(os.environ.get('PORT', 8080))
    with socketserver.TCPServer(('', port), ClaudeCodeHandler) as httpd:
        print(f'Claude Code fallback server running on port {port}')
        httpd.serve_forever()
"
fi
EOF

RUN chmod +x /usr/local/bin/claude-code-wrapper

# Create data directory
RUN mkdir -p /data

# Expose port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

# Start the service
CMD ["/usr/local/bin/claude-code-wrapper"]
